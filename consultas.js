show dbs;
documento = {nombre: "Eduardo"};
documento;
documento={String="Eduardo", numero=22, real=22.5, flotante=true, fecha=new Date()};
var documento={String:"Eduardo", numero:22, real:22.5, flotante:true, fecha:new Date()};
documento;
otro={nombre:"Eduardo",pais:"México"};
show dbs;
use codigo_facilito;
show dbs;
db;
usuario={nombre:"Test",edad:22};
db.usuarios.insert(usuario);
db;
show collections;
db.usuarios.find();
otro={nombre:"otro"};
db.usuarios.insert(otro);
db.usuarios.find();
db.usuarios.findOne();
var test = db.usuarios.findOne();
test;
test_dos = db.usuarios.find({nombre:"otro"});
var test_dos = db.usuarios.find({nombre:"otro"});
test_dos;
var test_dos = db.usuarios.find({edad:22});
test_dos;
eduardo={nombre:"Eduardo",edad:22};
eduardo={nombre:"Eduardo",edad:23};
db.usuarios.insert(eduardo);
db.usuarios.insert(eduardo_dos);
db.usuarios.find();
eduardo_22 = db.usuarios.find({nombre:"Eduardo",edad:22});
eduardo_22;
db.usuarios.find();
db.usuarios.find(edad:{$ne:22});
db.usuarios.find({edad:{$ne:22}});
db.usuarios.find({nombre:"test",edad:22});
db.usuarios.find({nombre:"Test",edad:22});
db.usuarios.find({nombre:"Test",edad:{$ne:23}});
uno = {nombre:"Test uno"};
dos = {nombre:"Test dos"};
uno;
dos;
db.usuarios.insert([uno, dos]);
db.usuarios.find();
var test = db.usuarios.findOne({nombre:"Test uno"});
test;
test.nombre;
test.nombre = "Cambio de nombre"
test;
db.usuarios.find();
db.usuarios.save(test);
db.usuarios.find();
save_prueba = {nombre:"esto es una prueba de save"};
db.usuarios.save(save_prueba);
db.usuarios.find();
test= db.usuarios.findOne({nombre:"Test uno"});
test= db.usuarios.findOne({nombre:"Test dos"});
test.nombre="podemos actualizar el nombre";
test.nombre;
test;
test.edad = 22;
test;
db.usuarios.find();
db.usuarios.update({nombre:"Test dos"}, test);
db.usuarios.find();
db.usuarios.update({nombre:"%T%"}, {set:{nombre:"CF"}},{multi:true});
db.usuarios.update({nombre:"Test"}, {set:{nombre:"CF"}},{multi:true});
db.usuarios.update({nombre:"Test"}, {$set:{nombre:"CF"}},{multi:true});
db.usuarios.update({nombre:"%t%"}, {$set:{nombre:"CF"}},{multi:true});
db.usuarios.update({}, {$set:{nombre:"CF"}},{multi:true});
db.usuarios.find();
db.usuarios.update({}, {$set:{edad:"27"}},{multi:true});
db.usuarios.find();
db.usuarios.update({}, {$set:{edad:"28", example:56}},{multi:true});
db.usuarios.find();
db.usuarios.update({}, {$set:{edad:"28", example:86}},{multi:true});
db.usuarios.find();
db.usuarios.update({}, {$unset:{example:86}},{multi:true});
db.usuarios.find();
db.usuarios.update({},{$set:{nombre:"FB"}}, {multi:true});
db.usuarios.find();
unos={nombre:"uno"};
dos={nombre:"dos"};
tres={nombre:"tres"};
uno;
dos;
tres;
db.usuarios.find();
db.usuarios.insert([uno, dos, tres]);
db.usuarios.find();
db.usuarios.remove({nombre:"Test uno"});
db.usuarios.find();
db.usuarios.update({},{$set:{nombre:"iguales"}}, {multi:true});
db.usuarios.find();
db.usuarios.remove({});
db.usuarios.find();
db.usuarios.insert(uno);
db.usuarios.find();
db.usuarios.remove({});
db.usuarios.find();
db.usuarios.drop();
show collections;
db;
db.dropDatabase();
db;
show dbs;
use biblioteca;
db;
db.createCollection('libros');
db;
show dbs;
show collections;
db.libros;
libro={nombre:"Hamlet"};
db.libros.insert(libro);
db.libros.find();
db.libros.insert({nombre:"Macbeth"});
db.libros.find();
db.libros.insert({nombre:"Otelo"});
db.libros.insert({nombre:"Romeo y Julieta"});
db.libros.insert({nombre:"El mercader de Venecia"});
db.libros.insert({nombre:"El rey Lear"});
db.libros.insert({nombre:"Antinio y Cleopatra"});
db.libros.find();
db.libros.update({nombre:"Antinio y Cleopatra"}, {$set:{nombre:"Antonio y Cleopatra"}});
db.libros.find();
db.libros.update({}, {$set:{autor:"William Shakespeare"}});
db.libros.find();
db.libros.update({}, {$set:{autor:"William Shakespeare"}}, {multi:true});
db.libros.find();
db.libros.find({},{nombre:1});
db.libros.find({},{nombre:1, _id:0});
db.libros.find({fecha:{$gte:2000, $lte:2005}},{nombre:1, _id:0});
db;
show dbs;
use test;
db;
db.createCollection('test');
db.test.find();
for(i=0;i<100;i++){db.test.insert({valor:i})};
db.test.find();
var cursor = db.test.find({valor:{$gt:98}});
cursor;
var cursor = db.test.find();
cursor.forEach(function(d){print(d)};
var cursor = db.test.find();
cursor.forEach(function(d){d.valor=100;db.test.save(d);});
var cursor = db.test.find();
cursor.forEach(function(d){print(d)} );
cursor.forEach(function(d){print(d.valor)} );
var cursor = db.test.find();
cursor.forEach(function(d){print(d.valor)} );
db.test.find();
db.test.find().count();
db.test.find().sort({valor:1});
db.test.find().sort({valor:-1});
db.test.find().sort({valor:-1}).limit(3);
db.test.find().sort({valor:1}).skip(1).limit(1);
db.test.find().sort({valor:1}).skip(1).limit(1).count();
db.test.find().sort({valor:1}).skip(1).limit(1);
db.test.find().sort({valor:1}).skip(1).size();
db.test.find().sort({valor:1}).skip(1).limit(1);
var arreglo = [1, 2, 3];
arreglo;
var usuario ={nombre: "test", valores: arreglo};
db;
use usuarios;
db;
db.usuarios.find();
db.usuarios.insert(usuario);
db.usuarios.find();
show dbs;
db.usuarios.find();
db.usuarios.update({},{$addToSet:{valores:4}});
db.usuarios.find();
db.usuarios.update({},{$addToSet:{valores:4}});
db.usuarios.find();
db.usuarios.update({},{$push:{valores:4}});
db.usuarios.update({},{$push:{valores:{$each:[5, 6]}}});
db.usuarios.find();
db.usuarios.update({},{$addToSet:{valores:{$each:[5, 6]}}});
db.usuarios.find();
db.usuarios.update({},{$addToSet:{valores:{$each:[6,7]}}});
db.usuarios.find();
db.usuarios.update({},{$addToSet:{valores:{$each:[100,101], $position:4}}});
db.usuarios.find();
db.usuarios.update({},{$push:{valores:{$each:[100,101], $position:4}}});
db.usuarios.find();
db.usuarios.update({},{$push:{valores:{$each:[95,97], $sort:1}}});
db.usuarios.find();
db.usuarios.update({},{$push:{valores:{$each:[], $sort:1}}});
db.usuarios.find();
db.usuarios.update({},{$pull:{valores:65}});
db.usuarios.find();
db.usuarios.update({},{$pull:{valores:95}});
db.usuarios.find();
db.usuarios.update({},{$pull:{valores:{$gt:50}}});
db.usuarios.find();
db.usuarios.update({},{$pullAll:{valores:[1,2]}});
db.usuarios.find();
db.usuarios.update({},{$unset:{valores:1}});
db.usuarios.find();
db.usuarios.update({},{$set:{nombre:"Eduardo"}});
db.usuarios.find();
db.usuarios.update({},{$set:{ejemplo:["MongoDB", "C#", "SQL", "Java", "Python"]}});
db.usuarios.find();
db.usuarios.find({},{ejemplo:true, _id:false});
db.usuarios.find({},{_id:false, ejemplo:{$slice:3}});
db.usuarios.find({},{_id:false, ejemplo:{$slice:1}});
db.usuarios.find({},{_id:false, ejemplo:{$slice:-1}});
db.usuarios.find({},{_id:false, ejemplo:{$slice:[1,3]}});
db.usuarios.find({},{_id:false, nombre:false, ejemplo:{$slice:[1,3]}});
db.usuarios.find({ejemplo:{$in:["MongoDB"]}},{_id:false, nombre:false, ejemplo:{$slice:[1,3]}});
db.usuarios.find({ejemplo:{$in:["XML"]}},{_id:false, nombre:false, ejemplo:{$slice:[1,3]}});
db.usuarios.find({ejemplo:{$in:["XML", "MongoDB"]}},{_id:false, nombre:false, ejemplo:{$slice:[1,3]}});
db.usuarios.find({ejemplo:{$nin:["XML", "MongoDB"]}},{_id:false, nombre:false, ejemplo:{$slice:[1,3]}});
db.usuarios.find({ejemplo:{$nin:["XML"]}},{_id:false, nombre:false, ejemplo:{$slice:[1,3]}});
var dos={nombre:"dos",ejemplo:["XML", "Go"]};
dos;
db.usuarios.insert(dos);
db.usuarios.find();
db.usuarios.find({ejemplo:{$nin:["C#"]}},{_id:false, nombre:false, ejemplo:{$slice:[1,3]}});
use items;
db;
db.items.insert({item:"caja",valor:100,existencia:20});
db.items.insert({item:"caja",valor:50,existencia:25});
db.items.insert({item:"latas",valor:450,existencia:20});
db.items.insert({item:"botellas",valor:50,existencia:150});
db.items.find();
db.items.aggregate([{$group:{_id:"$item"}}]);
db.items.aggregate([{$group:{_id:"$item", "repeticiones":{$sum:true}}}]);
db.items.aggregate([{$group:{_id:"$item", "repeticiones":{$sum:1}}}]);
db.items.aggregate([{$group:{_id:"$item", "repeticiones":{$sum:1}, "suma":{$sum:"$valor"}}}]);
db.items.aggregate([{$group:{_id:"$item", "repeticiones":{$sum:1}, "suma_valor":{$sum:"$valor"}}}]);
db.items.aggregate([{$group:{_id:"$item", "repeticiones":{$sum:1}, "suma_valor":{$sum:"$valor"}, "promedio":{$avg:"$valor"}}}]);
use correos;
db;
db.createCollection('correos');
db.correos.insert({correo:"test_test8@gmail.com"});
db.correos.insert({correo:"test_120@gmail.com"});
db.correos.insert({correo:"test_120@hotmail.mx"});
db.correos.find();
db.correos.find({correo:/@/});
db.correos.find({correo:/@test/});
db.correos.find({correo:/@/});
db.correos.find({correo:/.com$/});
db.correos.find({correo:/^test/});
db.correos.find({correo:/^test_120/});
db.correos.find({correo:/^test_120@g/});
show dbs;
alumno={ nombre:"Usuario", apellido:"Apellido", edad:22, sexo:"Masculino" };
matricula = { "numero" : 12345, "año" : 2016, "renovada" : false };
alumno.matricula = matricula;
use alumnos;
db;
db.createCollection('alumnos');
db.alumnos.insert(alumno);
db.alumnos.find();
matricula;
db.alumnos.find();
db.alumnos.find({"matricula.numero":"12345"});
db.alumnos.find({"matricula.numero":"12345"});
db.alumnos.find({"matricula.numero":12345});
db.alumnos.find({"matricula.numero":12345});
db.alumnos.find({"matricula.numero":12345});
db.alumnos.find({"matricula.numero":12345},{"matricula.":true});
db.alumnos.find({"matricula.numero":12345},{"matricula.año":true});
db.alumnos.update({}, {$set:{"matricula.año":2017}});
db.alumnos.find({"matricula.numero":12345},{"matricula.año":true});
db.alumnos.remove();
db.alumnos.find();
show dbs;
db;
una = {direccion: "direccion  uno"};
dos = {direccion: "direccion dos"};
tres = {direccion: "direccion tres"};
uno;
dos;
tres;
trabajador_dos = {
	nombre: "trabajador",
	edad:33,
	direccion_uno:uno,
	direccion_dos:dos,
	direccion_tres:tres
	};
trabajador.direcciones=[uno, dos, tres];
trabajador;
trabajador_dos;
show dbs;
use trabajadores;
db;
db.createCollection('trabajadores');
db.trabajadores.find();
db.trabajadores.insert({nombre:"Juan",apellido:"Pérez",edad:30,sexo:"Masculino",tipo_sangre:"0",
	cédula:{cedula:987654321,año_registro:2016,año_expiración:2018},
	direcciones:[
		{calle:"calle número uno",número:12,piso:4,colonia:"Colonia uno",uso:"entrega de paquetes"},
		{calle:"calle número uno",numero:11,colonia:"Colonia dos",uso:"contacto personal"}
		],
	estados:["Casado","Saludable","Sin deudas"]
});
db.trabajadores.find();
db.trabajadores.find().pretty();
db.trabajadores.find({apellido:"Pérez"});
db.trabajadores.find({"cédula.año_registro":2016});
db.trabajadores.find({"direcciones.uso":"contacto personal"});
db.trabajadores.find({direcciones:{$elemMatch:{uso:"contacto personal"}}});
db.trabajadores.find({direcciones:{$elemMatch:{uso:"contacto personal",número:11}}});
db.trabajadores.find({direcciones:{$elemMatch:{uso:"contacto personal",numero:11}}});
db.trabajadores.find({direcciones:{$elemMatch:{uso:"contacto personal",número:12}}});
db.trabajadores.find({direcciones:{$elemMatch:{uso:"contacto personal",numero:11}}});
db.trabajadores.find({direcciones:{$elemMatch:{uso:"contacto personal",numero:11}}},{_id:false,direcciones:true});
db.trabajadores.find({direcciones:{$elemMatch:{uso:"contacto personal",numero:11}}},{_id:false,direcciones:{$elemMatch:{uso:"contacto personal",numero:11}}});
db.trabajadores.find();
db.trabajadores.find().pretty();
db.trabajadores.find({"direcciones.número":12},{_id:false,direcciones:{$elemMatch:{número:12}}});
db.trabajadores.find({"direcciones.número":12},{_id:false,"direcciones.$":true});
db.trabajadores.find({"direcciones.número":{$gt:10}},{_id:false,"direcciones.$":true});
db.trabajadores.update({"direcciones.número":12},{$set:{"direcciones.$":{número:999}}});
db.trabajadores.find().pretty();
db.trabajadores.update({"direcciones.numero":11},{$set:{"direcciones.$.uso":"cambio de uso"}});
db.trabajadores.find().pretty();
use manzanas;
db;
db.createCollection('manzanas');
db.manzanas.insert({nombre:"McIntosh",valor:12,venta:true});
db.manzanas.insert({nombre:"Empire",valor:13,venta:true});
db.manzanas.insert({nombre:"Red Rome",valor:15,venta:true});
db.manzanas.insert({nombre:"Reineta",valor:10,venta:false});
db.manzanas.insert({nombre:"Fuji",valor:10,venta:true});
db.manzanas.insert({nombre:"Royal Gala",valor:50,venta:true});
db.manzanas.insert({nombre:"Delicious",valor:2,venta:false});
db.manzanas.find();
var documento = {_id:"Nuevo Id", name:"otro"};
show dbs;
use test;
db;
db.test.find();
db.test.insert(documento);
db.test.find();
db.test.find({name:"otro"});
new ObjectId();
db.test.remove({name:"otro"});
show dbs;
use prueba;
db.createCollection("Prueba_C", { validator:{$and: [ {nombre:{$type:"string"}}, {sexo:{$in:["M","F"]}}]}});
show collections;
db;
var documento = {nombre:12,sexo:"M"};
db.Prueba_C.insert(documento);
db.createCollection("Prueba_D", { validator:{$and: [ {nombre:{$type:"string"}}, {sexo:{$in:["M","F"]}},{email:{$regex: /@/}}]}});
show collections;
var documento = {nombre:"Eduardo Ismael",sexo:"M",email:"eduardo.com"};
db.Prueba_D.insert(documento);
var documento = {nombre:"Eduardo Ismael",sexo:"M",email:"eduardo@gmail.com"};
db.Prueba_D.insert(documento);
db.Prueba_D.find();
db.createCollection("Prueba_E", { validator:{$and: [ {nombre:{$type:"string"}}, {sexo:{$in:["M","F"]}},{email:{$regex: /@/}},{telefino:{$exists:false}}]}});
db.Prueba_E.insert(documento);
db.Prueba_E.find();
show dbs;
use usuarios;
db;
db.usuarios.find();
db.usuarios.find().explain();
db.usuarios.find().explain("executionStats");
db.usuarios.find().explain("executionStats").executionStats.executionTimeMillis;
db.usuarios.find().explain("executionStats").executionStats.totalDocsExamined;
db.usuarios.find().explain("executionStats").executionStats.executionTimeMillis;
db.usuarios.createIndex({nombre:1});
